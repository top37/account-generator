<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sq.account.generator.dao.AccountInMapper" >
  <resultMap id="BaseResultMap" type="com.sq.account.generator.model.AccountIn" >
    <id column="A" property="a" jdbcType="BIGINT" />
    <result column="B" property="b" jdbcType="VARCHAR" />
    <result column="C" property="c" jdbcType="VARCHAR" />
    <result column="D" property="d" jdbcType="VARCHAR" />
    <result column="E" property="e" jdbcType="VARCHAR" />
    <result column="F" property="f" jdbcType="VARCHAR" />
    <result column="G" property="g" jdbcType="VARCHAR" />
    <result column="H" property="h" jdbcType="VARCHAR" />
    <result column="I" property="i" jdbcType="VARCHAR" />
    <result column="J" property="j" jdbcType="VARCHAR" />
    <result column="K" property="k" jdbcType="VARCHAR" />
    <result column="L" property="l" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    A, B, C, D, E, F, G, H, I, J, K, L
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sq.account.generator.model.AccountInExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from accountin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from accountin
    where A = #{a,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from accountin
    where A = #{a,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sq.account.generator.model.AccountInExample" >
    delete from accountin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sq.account.generator.model.AccountIn" >
    insert into accountin (A, B, C, D, 
      E, F, G, H, 
      I, J, K, L
      )
    values (#{a,jdbcType=BIGINT}, #{b,jdbcType=VARCHAR}, #{c,jdbcType=VARCHAR}, #{d,jdbcType=VARCHAR}, 
      #{e,jdbcType=VARCHAR}, #{f,jdbcType=VARCHAR}, #{g,jdbcType=VARCHAR}, #{h,jdbcType=VARCHAR}, 
      #{i,jdbcType=VARCHAR}, #{j,jdbcType=VARCHAR}, #{k,jdbcType=VARCHAR}, #{l,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sq.account.generator.model.AccountIn" >
    insert into accountin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="a != null" >
        A,
      </if>
      <if test="b != null" >
        B,
      </if>
      <if test="c != null" >
        C,
      </if>
      <if test="d != null" >
        D,
      </if>
      <if test="e != null" >
        E,
      </if>
      <if test="f != null" >
        F,
      </if>
      <if test="g != null" >
        G,
      </if>
      <if test="h != null" >
        H,
      </if>
      <if test="i != null" >
        I,
      </if>
      <if test="j != null" >
        J,
      </if>
      <if test="k != null" >
        K,
      </if>
      <if test="l != null" >
        L,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="a != null" >
        #{a,jdbcType=BIGINT},
      </if>
      <if test="b != null" >
        #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        #{d,jdbcType=VARCHAR},
      </if>
      <if test="e != null" >
        #{e,jdbcType=VARCHAR},
      </if>
      <if test="f != null" >
        #{f,jdbcType=VARCHAR},
      </if>
      <if test="g != null" >
        #{g,jdbcType=VARCHAR},
      </if>
      <if test="h != null" >
        #{h,jdbcType=VARCHAR},
      </if>
      <if test="i != null" >
        #{i,jdbcType=VARCHAR},
      </if>
      <if test="j != null" >
        #{j,jdbcType=VARCHAR},
      </if>
      <if test="k != null" >
        #{k,jdbcType=VARCHAR},
      </if>
      <if test="l != null" >
        #{l,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sq.account.generator.model.AccountInExample" resultType="java.lang.Integer" >
    select count(*) from accountin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryAll"  resultMap="BaseResultMap" >
    select * from accountin
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update accountin
    <set >
      <if test="record.a != null" >
        A = #{record.a,jdbcType=BIGINT},
      </if>
      <if test="record.b != null" >
        B = #{record.b,jdbcType=VARCHAR},
      </if>
      <if test="record.c != null" >
        C = #{record.c,jdbcType=VARCHAR},
      </if>
      <if test="record.d != null" >
        D = #{record.d,jdbcType=VARCHAR},
      </if>
      <if test="record.e != null" >
        E = #{record.e,jdbcType=VARCHAR},
      </if>
      <if test="record.f != null" >
        F = #{record.f,jdbcType=VARCHAR},
      </if>
      <if test="record.g != null" >
        G = #{record.g,jdbcType=VARCHAR},
      </if>
      <if test="record.h != null" >
        H = #{record.h,jdbcType=VARCHAR},
      </if>
      <if test="record.i != null" >
        I = #{record.i,jdbcType=VARCHAR},
      </if>
      <if test="record.j != null" >
        J = #{record.j,jdbcType=VARCHAR},
      </if>
      <if test="record.k != null" >
        K = #{record.k,jdbcType=VARCHAR},
      </if>
      <if test="record.l != null" >
        L = #{record.l,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update accountin
    set A = #{record.a,jdbcType=BIGINT},
      B = #{record.b,jdbcType=VARCHAR},
      C = #{record.c,jdbcType=VARCHAR},
      D = #{record.d,jdbcType=VARCHAR},
      E = #{record.e,jdbcType=VARCHAR},
      F = #{record.f,jdbcType=VARCHAR},
      G = #{record.g,jdbcType=VARCHAR},
      H = #{record.h,jdbcType=VARCHAR},
      I = #{record.i,jdbcType=VARCHAR},
      J = #{record.j,jdbcType=VARCHAR},
      K = #{record.k,jdbcType=VARCHAR},
      L = #{record.l,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sq.account.generator.model.AccountIn" >
    update accountin
    <set >
      <if test="b != null" >
        B = #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        C = #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        D = #{d,jdbcType=VARCHAR},
      </if>
      <if test="e != null" >
        E = #{e,jdbcType=VARCHAR},
      </if>
      <if test="f != null" >
        F = #{f,jdbcType=VARCHAR},
      </if>
      <if test="g != null" >
        G = #{g,jdbcType=VARCHAR},
      </if>
      <if test="h != null" >
        H = #{h,jdbcType=VARCHAR},
      </if>
      <if test="i != null" >
        I = #{i,jdbcType=VARCHAR},
      </if>
      <if test="j != null" >
        J = #{j,jdbcType=VARCHAR},
      </if>
      <if test="k != null" >
        K = #{k,jdbcType=VARCHAR},
      </if>
      <if test="l != null" >
        L = #{l,jdbcType=VARCHAR},
      </if>
    </set>
    where A = #{a,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sq.account.generator.model.AccountIn" >
    update accountin
    set B = #{b,jdbcType=VARCHAR},
      C = #{c,jdbcType=VARCHAR},
      D = #{d,jdbcType=VARCHAR},
      E = #{e,jdbcType=VARCHAR},
      F = #{f,jdbcType=VARCHAR},
      G = #{g,jdbcType=VARCHAR},
      H = #{h,jdbcType=VARCHAR},
      I = #{i,jdbcType=VARCHAR},
      J = #{j,jdbcType=VARCHAR},
      K = #{k,jdbcType=VARCHAR},
      L = #{l,jdbcType=VARCHAR}
    where A = #{a,jdbcType=BIGINT}
  </update>
</mapper>